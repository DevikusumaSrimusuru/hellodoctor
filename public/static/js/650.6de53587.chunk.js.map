{"version":3,"file":"static/js/650.6de53587.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/Footer.jsx","components/Navbar.jsx","pages/Notifications.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport \"../styles/footer.css\";\r\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <div className=\"footer\">\r\n          <div className=\"footer-links\">\r\n            <h3>Links</h3>\r\n            <ul>\r\n              <li>\r\n                <NavLink to={\"/\"}>Home</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"social\">\r\n            <h3>Social links</h3>\r\n            <ul>\r\n              <li className=\"facebook\">\r\n                <a\r\n                  href=\"https://www.facebook.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaFacebookF />\r\n                </a>\r\n              </li>\r\n              <li className=\"youtube\">\r\n                <a\r\n                  href=\"https://www.youtube.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaYoutube />\r\n                </a>\r\n              </li>\r\n              <li className=\"instagram\">\r\n                <a\r\n                  href=\"https://www.instagram.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaInstagram />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-bottom\">\r\n          Made by{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/devikusuma-srimusuru\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Devi Kusuma\r\n          </a>{\" \"}\r\n          Â© {new Date().getFullYear()}\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/navbar.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Navbar = () => {\r\n  const [iconActive, setIconActive] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const [user, setUser] = useState(\r\n    localStorage.getItem(\"token\")\r\n      ? jwt_decode(localStorage.getItem(\"token\"))\r\n      : \"\"\r\n  );\r\n\r\n  const logoutFunc = () => {\r\n    dispatch(setUserInfo({}));\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <nav className={iconActive ? \"nav-active\" : \"\"}>\r\n        <h2 className=\"nav-logo\">\r\n          <NavLink to={\"/\"}>\r\n          <img src=\"/logo.png\" alt=\"logo\" width={\"200px\"}/>\r\n          </NavLink>\r\n        </h2>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <NavLink to={\"/\"}>Home</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n          </li>\r\n          {token && user.isAdmin && (\r\n            <li>\r\n              <NavLink to={\"/dashboard/users\"}>Dashboard</NavLink>\r\n            </li>\r\n          )}\r\n          {token && !user.isAdmin && (\r\n            <>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/applyfordoctor\"}>Apply for doctor</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!token ? (\r\n            <>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/login\"}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/register\"}\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li>\r\n              <span\r\n                className=\"btn\"\r\n                onClick={logoutFunc}\r\n              >\r\n                Logout\r\n              </span>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n      <div className=\"menu-icons\">\r\n        {!iconActive && (\r\n          <FiMenu\r\n            className=\"menu-open\"\r\n            onClick={() => {\r\n              setIconActive(true);\r\n            }}\r\n          />\r\n        )}\r\n        {iconActive && (\r\n          <RxCross1\r\n            className=\"menu-close\"\r\n            onClick={() => {\r\n              setIconActive(false);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/Notifications.css\";  // Ensure the path is correct\r\nimport Empty from \"../components/Empty\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const getAllNotif = async () => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/notification/getallnotifs`);\r\n      dispatch(setLoading(false));\r\n      setNotifications(temp);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch notifications:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllNotif();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"container\">\r\n          <h2 className=\"page-heading\">Your Notifications</h2>\r\n          {notifications.length > 0 ? (\r\n            <div className=\"notifications\">\r\n              {notifications.map((ele, i) => (\r\n                <div className=\"notification-card\" key={ele?._id}>\r\n                  <p className=\"notification-content\">{ele?.content}</p>\r\n                  <div className=\"notification-date\">\r\n                    {new Date(ele?.updatedAt).toLocaleDateString()} - {new Date(ele?.updatedAt).toLocaleTimeString()}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"names":["className","to","href","target","rel","Date","getFullYear","useState","iconActive","setIconActive","dispatch","useDispatch","navigate","useNavigate","localStorage","getItem","token","jwt_decode","user","src","alt","width","isAdmin","onClick","setUserInfo","removeItem","notifications","setNotifications","loading","useSelector","state","root","getAllNotif","setLoading","fetchData","temp","console","error","useEffect","Navbar","Loading","length","map","ele","i","content","updatedAt","toLocaleDateString","toLocaleTimeString","_id","Empty","Footer"],"sourceRoot":""}